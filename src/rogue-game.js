// Generated by CoffeeScript 1.7.1
var Game;

Game = {
  agents: [],
  edgeColor: 'rgb(20, 125, 40)',
  tileColor: 'rgb(20, 185, 40)',
  grid: {
    width: 64,
    height: 64,
    tile: {
      width: 8,
      height: 8
    }
  },
  start: function() {
    Crafty.init(512, 512);
    Crafty.background('green');
    Game.placeAgent();
    return Game.generateTiles();
  },
  newTile: function(x, y) {
    return {
      y: Game.grid.tile.height * y,
      x: Game.grid.tile.width * x,
      w: Game.grid.tile.width,
      h: Game.grid.tile.height
    };
  },
  generateTiles: function() {
    var heightArray, widthArray, x, y, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;
    widthArray = (function() {
      _results = [];
      for (var _i = 0, _ref = Game.grid.width; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
    heightArray = (function() {
      _results1 = [];
      for (var _j = 0, _ref1 = Game.grid.height; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; 0 <= _ref1 ? _j++ : _j--){ _results1.push(_j); }
      return _results1;
    }).apply(this);
    _results2 = [];
    for (_k = 0, _len = widthArray.length; _k < _len; _k++) {
      x = widthArray[_k];
      _results2.push((function() {
        var _l, _len1, _results3;
        _results3 = [];
        for (_l = 0, _len1 = heightArray.length; _l < _len1; _l++) {
          y = heightArray[_l];
          if (Game.atEdge(x, y)) {
            _results3.push(Game.placeEdge(x, y));
          } else {
            _results3.push(void 0);
          }
        }
        return _results3;
      })());
    }
    return _results2;
  },
  width: function() {
    return this.grid.width * this.grid.tile.width;
  },
  height: function() {
    return this.grid.height * this.grid.tile.height;
  },
  atEdge: function(x, y) {
    return x === 0 || y === 0 || x === Game.grid.width - 1 || y === Game.grid.height - 1;
  },
  placeAgent: function(x, y) {
    x = x || 5;
    y = y || 5;
    console.log("x, y of agent", x, y);
    return Game.agents.push(Crafty.e('Agent').at(x, y));
  },
  placeEdge: function(x, y) {
    return Crafty.e('Tree').at(x, y);
  },
  placeBush: function(x, y) {
    if (Math.random() < 0.06) {
      return Crafty.e('Bush').at(x, y);
    }
  },
  placeTile: function(x, y) {
    return Crafty.e('2D, Canvas, Color').attr(Game.newTile(x, y)).color(Game.tileColor);
  }
};
