// Generated by CoffeeScript 1.7.1
(function(ng, app) {
  'use strict';
  return app.factory("MessageFactory", function($log) {
    var MessageFactory;
    MessageFactory = (function() {
      MessageFactory.prototype.add = function(msg) {
        this.scope.$apply((function(_this) {
          return function() {
            return _this.messages.push(msg);
          };
        })(this));
      };

      MessageFactory.prototype.setupWebsocketMethods = function() {
        this.ws.onopen = (function(_this) {
          return function() {
            $log.info("onopen called", "CONNECT");
            _this.add("CONNECT");
          };
        })(this);
        this.ws.onclose = (function(_this) {
          return function() {
            $log.info("onclose called", "DISCONNECT");
            _this.add("DISCONNECT");
          };
        })(this);
        this.ws.onmessage = (function(_this) {
          return function(event) {
            $log.info("onmessage called", "MESSAGE: " + event.data);
            _this.add("MESSAGE: " + event.data);
          };
        })(this);
        return this.ws.onerror = function(err) {
          return $log.info("WEBSOCKET ERROR", err);
        };
      };

      function MessageFactory(scope) {
        this.scope = scope;
        this.messages = [];
        this.ws = new WebSocket("ws://localhost:8080/");
        this.setupWebsocketMethods();
        $log.info("MessageFactory constructed");
      }

      return MessageFactory;

    })();
    return MessageFactory;
  });
})(angular, rogueLikeLike);
